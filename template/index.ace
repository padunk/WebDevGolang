= doctype html
html
  head
    = css
      #search-results tr:hover,
      #view-results tr:hover,
      #view-page th:hover {
        background-color: lightgrey;
        cursor: pointer;
      }
      #page-switcher {
        width: 100%;
        text-align: center;
      }
      #page-switcher button {
        font-size: 24px;
        font-weight: bold;
        margin: 1em;
        padding: .3em;
      }
      #search-page {
        display: none;
      }
      .delete-btn {
        color: white;
        background-color: #d9534f;
        border-color: #d43f3a;
        border-radius: 8px;
      }
      #user-info {
        text-align: right;
      }
  body
    #user-info
      div You are currently loggin as <b>{{.User}}</b>
      a href="/logout" (Log Out)

    div#page-switcher
      button#view-library onclick="showViewPage()" View Library
      button#add-books onclick="showSearchPage()" Add Books

    div#search-page
      form id="search-form" onsubmit="return false"
        input name="search"
        input type="submit" value="Search" onclick="submitSearch()"

      table width="100%"
        thead
          tr style="text-align: left;"
            th width="40%" Title
            th width="30%" Author
            th width="10%" Year
            th width="20%" ID
        tbody id="search-results"

    div#view-page
      form#filter-view-results style="float: right;"
        select name="filter" style="font-size: 18px; min-width: 10em;" onchange="filterViewResults()"
          option value="all" All Books
          option value="fiction" Fiction
          option value="non-fiction" Non Fiction
      table width="100%"
        thead
          tr style="text-align: left;"
            th width="35%" onclick="sortBooks('title')" Title
            th width="35%" onclick="sortBooks('author')" Author
            th width="20%" onclick="sortBooks('classification')" Classification
            th width="10%"
        tbody#view-results
          {{range .Books}}
            tr id="book-row-{{.PK}}"
              td {{.Title}}
              td {{.Author}}
              td {{.Classification}}
              td
                button.delete-btn onclick="deleteBook({{.PK}})" Delete
          {{end}}

    script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"
    = javascript
      $(document).ready(function() {
        $("#filter-views-results option[value='" + {{.Filter}} + "']").prop("selected", true);
      })
      function showViewPage() {
        $("#search-page").hide()
        $("#view-page").show()
      }
      function showSearchPage() {
        $("#search-page").show()
        $("#view-page").hide()
      }

      function rebuildBookCollection(result) {
        var books = JSON.parse(result);
        if(!books) return;

        var viewResults = $("#view-results");
        viewResults.empty();

        books.forEach(function(book) {
          appendBook(viewResults, book);
        });
      }

      function appendBook(element, book) {
        element.append(`<tr id="book-row-${book.PK}"><td>${book.Title}</td><td>${book.Author}</td><td>${book.Classification}</td><td><button class="delete-btn" onclick="deleteBook(${book.PK})">Delete</button></td></tr>`);
      }

      function sortBooks(columnName) {
        $.ajax({
          method: "GET",
          url: "/books?sortBy=" + columnName,
          success: rebuildBookCollection
        });
      }

      function filterViewResults() {
        $.ajax({
          method: "GET",
          url: "/books",
          data: $("#filter-view-results").serialize(),
          success: rebuildBookCollection
        })
      }

      function deleteBook(pk) {
        $.ajax({
          url: "/books/" + pk,
          method: "DELETE",
          success: function() {
            $("#book-row-" + pk).remove();
          }
        });
      }

      function submitSearch() {
        $.ajax({
          url: "/search",
          method: "POST",
          data: $("#search-form").serialize(),
          success: function(rawData) {
            var parsed = JSON.parse(rawData);
            if (!parsed) return;

            var searchResults = $("#search-results");
            searchResults.empty();

            parsed.forEach(function(result) {
              var row = $("<tr><td>" + result.Title + "</td><td>" + result.Author + "</td><td>" + result.Year +  "</td><td>" + result.ID + "</td></tr>");
          
              searchResults.append(row);
              var viewResults = $("#view-results");
              row.on("click", function(){
                $.ajax({
                  url: "/books/?id=" + result.ID,
                  method: "PUT",
                  success: function(data) {
                    var book = JSON.parse(data);
                    if (!book) return;

                    appendBook(viewResults, book);
                  }
                })
              })
            });
          }
        });

        return false;
      }
